{"version":3,"sources":["Components/Maps/UserAcquisition.js","Components/Loader.js","Components/utils.js","Components/Maps/MapComponent.js"],"names":["UserAcquisition","useState","loading","setloading","stats","setStats","featureData","setFeatureData","useEffect","document","title","findUsersPerArea","areaData","usersData","i","maxA","minA","total","maxV","Number","MIN_SAFE_INTEGER","minV","MAX_SAFE_INTEGER","features","forEach","area","areaFound","length","area_id","properties","obj","a","Promise","all","axios","get","values","data","users","fetchData","param","description","Loader","className","getColor","d","min","max","chroma","scale","domain","hex","MapComponent","name","setName","value","setValue","Legend","map","grade","style","minVal","maxVal","Stats","maxArea","minArea","defaultStyle","feature","fillColor","weight","color","fillOpacity","hoverStyle","MapContainer","center","zoom","height","width","TileLayer","url","attribution","GeoJSON","onEachFeature","layer","on","mouseover","e","target","setStyle","mouseout","Tooltip","sticky","direction"],"mappings":"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","file":"static/js/8.995e3fbe.chunk.js","sourcesContent":["import {useState,useEffect} from \"react\";\r\nimport MapComponent from \"./MapComponent\";\r\nimport axios from 'axios';\r\n\r\nexport default function UserAcquisition() {\r\n\t\r\n\tconst [loading,setloading] = useState(true);\t\r\n\tconst [stats,setStats] = useState({});\r\n\r\n\tconst [featureData,setFeatureData] = useState();\r\n\t\r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdocument.title = \"User Acquisition\";\r\n\t\t\r\n\t\tconst findUsersPerArea = (areaData, usersData) => {\r\n\t\t\tlet i,maxV=Number.MIN_SAFE_INTEGER,minV=Number.MAX_SAFE_INTEGER,maxA,minA,total;\r\n\t\t\tareaData?.features?.forEach((area) => {\r\n\t\t\t\ttotal=0;\r\n\t\t\t\t//break logic: assuming data will always be sorted by area_id\r\n\t\t\t\tlet areaFound=false;\r\n\t\t\t\tfor (i = 0; i < usersData.length; i++) {\r\n\t\t\t\t  if(usersData[i].area_id === area?.properties.area_id){\r\n\t\t\t\t\ttotal++;\r\n\t\t\t\t\tareaFound=true;\r\n\t\t\t\t  }\r\n\t\t\t\t  if(areaFound && usersData[i].area_id !== area?.properties.area_id)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\tusersData?.forEach((user) => {\r\n\t\t\t\t\tif(user.area_id === area?.properties.area_id)total++;\r\n\t\t\t\t})\r\n\t\t\t\t*/\r\n\t\t\t\tif(total>maxV){\r\n\t\t\t\t\tmaxV=total;\r\n\t\t\t\t\tmaxA=area[\"properties\"][\"name\"];\r\n\t\t\t\t}\r\n\t\t\t\tif(total<minV){\r\n\t\t\t\t\tminV=total;\r\n\t\t\t\t\tminA=area[\"properties\"][\"name\"];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tarea[\"properties\"][\"userCount\"]=total;\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tconst obj= {};\r\n\t\t\tobj[\"minVal\"]=minV;\r\n\t\t\tobj[\"maxVal\"]=maxV;\r\n\t\t\tobj[\"minArea\"]=minA;\r\n\t\t\tobj[\"maxArea\"]=maxA;\r\n\t\t\t\r\n\t\t\tsetStats({...stats, ...obj });\r\n\t\t\tsetFeatureData(areaData);\r\n\t\t\tsetloading(false);\r\n\t\t}\r\n\t\t\r\n\t\tasync function fetchData() {\r\n\t\t\tlet values = await Promise.all([\r\n\t\t\t\taxios.get('https://kyupid-api.vercel.app/api/areas'), \r\n\t\t\t\taxios.get('https://kyupid-api.vercel.app/api/users')\r\n\t\t\t]);\r\n\t\t\t\r\n\t\t\tfindUsersPerArea(values[0]?.data, values[1]?.data?.users)\r\n\t\t}\r\n\t\t\r\n\t\tfetchData();\r\n\t\t\r\n\t},[]);\r\n\t\r\n\tconst description=\"This map shows count of users per area\";\r\n\t\t\r\n  return (\r\n\t\t<MapComponent {...{featureData,loading,stats,param:\"userCount\",description}}/>\r\n  );\r\n}","const Loader = () => {\r\n\treturn (\r\n\t\t<div className=\"loader\"></div>\r\n\t)\r\n}\r\n\r\nexport default Loader;","import chroma from \"chroma-js\";\r\n\r\nexport const getColor = (d, min,max) => {\r\n\tconst scale = chroma.scale([\"red\",\"orange\",\"yellow\",\"green\"]).domain([min, max]);\r\n\treturn scale(d).hex();\r\n}","import React,{useState} from \"react\";\nimport { MapContainer,TileLayer,GeoJSON,Tooltip} from \"react-leaflet\";\nimport Loader from \"../Loader.js\";\nimport {getColor} from \"../utils.js\"\n\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapComponent = ({featureData,loading,stats,param,description}) => {\n\n\tconst center= [12.971599, 77.594566];\n\t\n\tconst [name,setName]= useState(\"\");\n\tconst [value,setValue]= useState(\"\");\n\t\n\tconst Legend = () => {\n\t\tconst grades = [1,2,3,4,5,6,7,8,9,10];\n\t\treturn (\n\t\t\t<div className=\"leaflet-bottom leaflet-right\">\n\t\t\t  <div className=\"legend leaflet-control leaflet-bar\">\n\t\t\t  <h6><b>Legend</b></h6>\n\t\t\t  {\n\t\t\t\t  grades.map(grade=>{ \n\t\t\t\t\t  if(grade===1){\n\t\t\t\t\t\t  return <div key={grade}><i  style={{\"background\":`${getColor(grade,1,10)}`}}></i>{stats.minVal} (min)<br/></div>\n\t\t\t\t\t  }\n\t\t\t\t\t  else if(grade===10){\n\t\t\t\t\t\t  return <div key={grade}><i  style={{\"background\":`${getColor(grade,1,10)}`}}></i>{stats.maxVal} (max)<br/></div>\n\t\t\t\t\t  }\n\t\t\t\t\t  else{\n\t\t\t\t\t\t  return <div key={grade}><i  style={{\"background\":`${getColor(grade,1,10)}`}}></i><br/></div>\n\t\t\t\t\t  }\n\t\t\t\t  })\n\t\t\t  }\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n\t\n\tconst Stats = () => {\n\t\treturn (\n\t\t\t<div className=\"leaflet-top leaflet-right\">\n\t\t\t  <div className=\"stats leaflet-control leaflet-bar\">\n\t\t\t\t<br/>\n\t\t\t\t<h6><b>Maximum Value:</b></h6>\n\t\t\t\t<h6>{stats.maxArea} : {stats.maxVal}</h6>\n\t\t\t\t<br/>\n\t\t\t\t<h6><b>Minimum Value:</b></h6>\n\t\t\t\t<h6>{stats.minArea} : {stats.minVal}</h6>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n\t\n\tconst defaultStyle=(feature)=>{\n\t\treturn {\n\t\t\tfillColor: getColor(feature.properties[param],stats.minVal,stats.maxVal),\n\t\t\tweight: 2,\n\t\t\tcolor: 'white',\n\t\t\tfillOpacity: 0.7\n\t\t}\n\t}\n\t\n\tconst hoverStyle ={\n\t\tweight: 5,\n\t\tfillOpacity: 1\n\t}\n\t\n\tconst onEachFeature = (feature,layer) => {\n        layer.on({\n            mouseover: (e) => {\n\t\t\t\te.target.setStyle(hoverStyle);\n\t\t\t\tsetName(feature.properties.name);\n\t\t\t\tsetValue(feature.properties[param]);\n\t\t\t},\n\t\t\tmouseout: (e) => {\n\t\t\t\te.target.setStyle(defaultStyle(feature));\n\t\t\t\tsetName(\"\");\n\t\t\t\tsetValue(\"\");\n\t\t\t}\n        });\n    };\n\n\treturn (\n\t\t<>\n\t\t{\n\t\t\tloading \n\t\t\t?\n\t\t\t<Loader />\n\t\t\t:\n\t\t\t<>\n\t\t\t<b><p>{description}</p></b>\n\t\t\t<MapContainer center={center} zoom={11} style={{height:\"80vh\",width:\"80vw\"}}>\n\t\t\t\t<TileLayer\n\t\t\t\t\turl=\"http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png\"\n\t\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<Stats />\n\t\t\t\t\n\t\t\t\t<Legend />\n\t\t\t\t\n\t\t\t\t<GeoJSON \n\t\t\t\t\tkey={name}\n\t\t\t\t\tstyle={defaultStyle} \n\t\t\t\t\tdata={featureData.features}  \n\t\t\t\t\tonEachFeature={onEachFeature}\n\t\t\t\t>\n\t\t\t\t\t<Tooltip sticky direction=\"top\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h5>{name}</h5>\n\t\t\t\t\t\t\t<h6>{value}</h6>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Tooltip>\n\n\t\t\t\t</GeoJSON>\n\t\t\t\t\n\t\t\t</MapContainer>\n\t\t\t</>\n\t\t}\n\t\t</>\n\t);\n}\n\nexport default MapComponent"],"sourceRoot":""}