{"version":3,"sources":["Layout/SideBar.js","Layout/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["SideBar","className","classNames","Nav","Item","Link","activeClassName","as","NavLink","to","icon","faHome","faMap","NavBar","header","locat","useLocation","pathname","Navbar","bg","variant","expand","Home","lazy","GenderSkew","ProUserRevenue","UserAcquisition","MatchesByArea","App","routes","path","component","Container","fluid","fallback","map","route","index","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68b0912c.chunk.js","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHome,\n  faMap\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from 'react-router-dom';\nimport classNames from \"classnames\";\n\nconst SideBar = () => {\n\t\n    return (\n      <div className={classNames(\"sidebar\", { \"is-open\": true })}>\n        <div className=\"sidebar-header\">\n          <h3>Kyupid Dashboard</h3>\n        </div>\n        <Nav className=\"flex-column pt-1\">\n\t\t\n          <Nav.Item >\n            <Nav.Link activeClassName=\"active\" as={NavLink}  to=\"/kyupid-locale/home\" >\n              <FontAwesomeIcon icon={faHome} className=\"mr-2\" />\n              Home\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav.Item >\n            <Nav.Link activeClassName=\"active\" as={NavLink} to=\"/kyupid-locale/pro-user-revenue\" >\n              <FontAwesomeIcon icon={faMap} className=\"mr-2\" />\n              Pro User Revenue\n            </Nav.Link>\n          </Nav.Item>\n\t\t  \n\t\t  <Nav.Item >\n            <Nav.Link activeClassName=\"active\" as={NavLink} to=\"/kyupid-locale/user-acquisition\" >\n              <FontAwesomeIcon icon={faMap} className=\"mr-2\" />\n              User Acquisition\n            </Nav.Link>\n          </Nav.Item>\n\t\t  \n\t\t  <Nav.Item >\n            <Nav.Link activeClassName=\"active\" as={NavLink} to=\"/kyupid-locale/matches-by-area\" >\n              <FontAwesomeIcon icon={faMap} className=\"mr-2\" />\n              MatchesByArea\n            </Nav.Link>\n          </Nav.Item>\n\t\t  \n\t\t  <Nav.Item >\n            <Nav.Link activeClassName=\"active\" as={NavLink} to=\"/kyupid-locale/gender-skew\">\n              <FontAwesomeIcon icon={faMap} className=\"mr-2\" />\n              Gender Skew\n            </Nav.Link>\n          </Nav.Item>\n\t\t  \n        </Nav>\n      </div>\n    );\n}\n\nexport default SideBar;","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport {useLocation} from 'react-router-dom';\n\nconst NavBar = () => {\n\tconst location = useLocation();\n\t\n\tlet header, locat=location.pathname;\n\t\n\tif(locat===\"/kyupid-locale/home\")header=\"Home\";\n\telse if (locat===\"/kyupid-locale/gender-skew\")header=\"Gender Skew\";\n\telse if (locat===\"/kyupid-locale/pro-user-revenue\")header=\"Pro User Revenue\";\n\telse if (locat===\"/kyupid-locale/user-acquisition\")header=\"User Acquisition\";\n\telse if (locat===\"/kyupid-locale/matches-by-area\")header=\"Matches By Area\";\n\telse header=\"Kyupid Dashboard\";\n\t\n    return (\n      <Navbar\n        bg=\"light\" variant=\"light\"\n        className=\"justify-content-center navbar shadow-sm p-2 mb-2 rounded\"\n        expand\n      >\n\t\t<b><h3>{header}</h3></b>\n      </Navbar>\n    );\n}\n\nexport default NavBar;","import React, {lazy,Suspense} from \"react\";\nimport { Route, Switch,Redirect } from 'react-router-dom';\nimport { Container } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nimport SideBar from \"./Layout/SideBar\";\nimport NavBar from \"./Layout/Navbar\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\"\n\nconst Home = lazy(() => import(\"./Components/Home\"));\nconst GenderSkew = lazy(() => import(\"./Components/Maps/GenderSkew\"));\nconst ProUserRevenue = lazy(() => import(\"./Components/Maps/ProUserRevenue\"));\nconst UserAcquisition = lazy(() => import(\"./Components/Maps/UserAcquisition\"));\nconst MatchesByArea = lazy(() => import(\"./Components/Maps/MatchesByArea\"));\n\nconst App = () => {\n\t\n\tconst routes = [\n\t\t{\n\t\t  path: '/kyupid-locale/home',\n\t\t  component: Home,\n\t\t}, {\n\t\t  path: '/kyupid-locale/gender-skew',\n\t\t  component: GenderSkew,\n\t\t}, {\n\t\t  path: '/kyupid-locale/pro-user-revenue',\n\t\t  component: ProUserRevenue,\n\t\t}, {\n\t\t  path: '/kyupid-locale/user-acquisition',\n\t\t  component: UserAcquisition,\n\t\t}, {\n\t\t  path: '/kyupid-locale/matches-by-area',\n\t\t  component: MatchesByArea,\n\t\t}\n\t];\n\n\treturn (\n\t\t<div className=\"App wrapper\">\n\n\t\t\t<SideBar />\n\t\t\t\n\t\t\t<Container fluid className={classNames(\"content\", { \"is-open\": true })}>\n\t\n\t\t\t\t<div className=\"AppContent\">\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\troutes.map((route, index) => (\n\t\t\t\t\t\t\t\t<Route key={index} {...route} />\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Redirect from=\"/\" to=\"/kyupid-locale/home\"/>\n\t\t\t\t\t</Switch>\n\t\t\t\t\t</Suspense>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</Container>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}